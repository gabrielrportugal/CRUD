unit ClienteModel;

{Classe com os atributos de um Cliente (ID,Nome,CPF, Data de Cadastro)}

interface

uses
  System.Classes;

type
  TCliente = class
  private
    FCPF: string;
    FID: integer;
    FNome: string;
    FData: TDateTime;
    FOnEventoTeste : TNotifyEvent;
    procedure setCPF(const Value: string);
    procedure setData(const Value: TDateTime);
    procedure setNome(const Value: string);
    procedure setID(const Value: integer);
  public
    property ID: integer read FID write setID;
    property Nome: string read FNome write setNome;
    property CPF: string read FCPF write setCPF;
    property Data: TDateTime read FData write setData;
    property OnEventoTeste : TNotifyEvent read FOnEventoTeste write FOnEventoTeste;
  end;

implementation

{ TCliente }

uses
  System.SysUtils;

procedure TCliente.setCPF(const Value: string);
begin
  if Value.IsEmpty then
    raise Exception.Create('CPF não pode ser vazio');
  FCPF := Value;
end;

procedure TCliente.setData(const Value: TDateTime);
begin
  FData := Value;
end;

procedure TCliente.setID(const Value: integer);
begin
  FID := Value;
end;

procedure TCliente.setNome(const Value: string);
begin
  if Value.IsEmpty then
    raise Exception.Create('Nome não pode ser vazio');
  FNome := Value;
end;

end.
